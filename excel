
<?php
defined('BASEPATH') OR exit('No direct script access allowed');
// application/controllers/DropdownController.php
class DropdownController extends CI_Controller {
    public function generate_excel() {
        // Load the PHPExcel library
        $this->load->library('PHPExcel');

        // Load the Excel template
        $templateFilePath = _xls_;
       $objPHPExcel = new PHPExcel();

        //$objPHPExcel = PHPExcel_IOFactory::load($templateFilePath);

        // Get the data from the database or any other data source (not shown in this example)
        // Replace this with your own data retrieval logic for parent and child options
        $parentOptions = ['Option 1', 'Option 2', 'Option 3'];
        $childOptions = [
            'Option 1' => ['Child Option 1', 'Child Option 2'],
            'Option 2' => ['Child Option 3', 'Child Option 4'],
            'Option 3' => ['Child Option 5', 'Child Option 6'],
        ];

        // Set the parent dropdown options in the Excel file
        $parentSheet = $objPHPExcel->getActiveSheet();
        $parentSheet->setCellValue('A2', implode(',', $parentOptions));

        // Set the child dropdown options in the Excel file based on parent selection
        foreach ($parentOptions as $index => $option) {
            $childSheet = clone $parentSheet;
            $childSheet->setCellValue('A2', implode(',', $childOptions[$option]));
            $objPHPExcel->addSheet($childSheet, $index + 1);
        }

        // Create a response for Excel download
        $filename = 'dependency_dropdown_example.xlsx';
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="' . $filename . '"');
        header('Cache-Control: max-age=0');

        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
        $objWriter->save('php://output');
        exit;
    }
}



// application/controllers/DropdownController.php
class DropdownController extends CI_Controller {
    public function index() {
        $this->load->view('dropdown_view');
    }

    public function generate_excel() {
        // Load PhpSpreadsheet library
        require_once APPPATH . 'libraries/vendor/autoload.php';
        $spreadsheet = new \PhpOffice\PhpSpreadsheet\Spreadsheet();
        $sheet = $spreadsheet->getActiveSheet();

        // Define parent and child dropdown options
        $parentOptions = ['Option 1', 'Option 2', 'Option 3'];
        $childOptions = [
            'Option 1' => ['Child Option 1', 'Child Option 2', 'Child Option 3'],
            'Option 2' => ['Child Option 4', 'Child Option 5'],
            'Option 3' => ['Child Option 6', 'Child Option 7', 'Child Option 8'],
        ];

        // Set parent dropdown options
        $sheet->setCellValue('A1', 'Select Parent');
        $sheet->setCellValue('B1', implode(',', $parentOptions));

        // Set data validation for parent dropdown
        $sheet->setDataValidation('B2:B100', \PhpOffice\PhpSpreadsheet\Cell\DataValidation::TYPE_LIST, ['formula1' => '=$B$1']);

        // Set child dropdown options
        foreach ($parentOptions as $index => $parentOption) {
            $startRow = $index * 10 + 2; // Adjust the start row as per your requirements
            $endRow = $startRow + count($childOptions[$parentOption]) - 1;
            $options = implode(',', $childOptions[$parentOption]);
            $sheet->setCellValue('A' . $startRow, 'Select Child');
            $sheet->setCellValue('B' . $startRow, $options);
            // Set data validation for child dropdown
            $sheet->setDataValidation('B' . ($startRow + 1) . ':B' . $endRow, \PhpOffice\PhpSpreadsheet\Cell\DataValidation::TYPE_LIST, ['formula1' => '=$B$' . $startRow]);
        }

        // Create a response for Excel download
        $filename = 'dependency_dropdown_example.xlsx';
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment; filename="' . $filename . '"');
        header('Cache-Control: max-age=0');

        $writer = \PhpOffice\PhpSpreadsheet\IOFactory::createWriter($spreadsheet, 'Xlsx');
        $writer->save('php://output');
        exit;
    }
}










// application/controllers/DropdownController.php
class DropdownController extends CI_Controller {
    public function index() {
        $this->load->view('dropdown_view');
    }

    public function generate_excel() {
        // Load PhpSpreadsheet library
        require_once APPPATH . 'libraries/vendor/autoload.php';
        $spreadsheet = new \PhpOffice\PhpSpreadsheet\Spreadsheet();
        $sheet = $spreadsheet->getActiveSheet();

        // Define country, state, and city data (replace this with your data retrieval logic)
        $countries = ['Country 1', 'Country 2', 'Country 3'];
        $states = [
            'Country 1' => ['State 1', 'State 2'],
            'Country 2' => ['State 3', 'State 4'],
            'Country 3' => ['State 5', 'State 6'],
        ];
        $cities = [
            'State 1' => ['City 1', 'City 2'],
            'State 2' => ['City 3', 'City 4'],
            'State 3' => ['City 5', 'City 6'],
            'State 4' => ['City 7', 'City 8'],
            'State 5' => ['City 9', 'City 10'],
            'State 6' => ['City 11', 'City 12'],
        ];

        // Set country dropdown options
        $sheet->setCellValue('A1', 'Select Country');
        $sheet->setCellValue('B1', implode(',', $countries));

        // Set data validation for country dropdown
        $sheet->setDataValidation('B2:B100', \PhpOffice\PhpSpreadsheet\Cell\DataValidation::TYPE_LIST, ['formula1' => '=$B$1']);

        // Set state dropdown options based on selected country
        foreach ($countries as $index => $country) {
            $startRow = $index * 10 + 2; // Adjust the start row as per your requirements
            $endRow = $startRow + count($states[$country]) - 1;
            $options = implode(',', $states[$country]);
            $sheet->setCellValue('A' . $startRow, 'Select State');
            $sheet->setCellValue('B' . $startRow, $options);
            // Set data validation for state dropdown
            $sheet->setDataValidation('B' . ($startRow + 1) . ':B' . $endRow, \PhpOffice\PhpSpreadsheet\Cell\DataValidation::TYPE_LIST, ['formula1' => '=$B$' . $startRow]);

            // Set city dropdown options based on selected state
            foreach ($states[$country] as $stateIndex => $state) {
                $cityStartRow = $startRow + $stateIndex * 10 + 2; // Adjust the start row as per your requirements
                $cityEndRow = $cityStartRow + count($cities[$state]) - 1;
                $cityOptions = implode(',', $cities[$state]);
                $sheet->setCellValue('A' . $cityStartRow, 'Select City');
                $sheet->setCellValue('B' . $cityStartRow, $cityOptions);
                // Set data validation for city dropdown
                $sheet->setDataValidation('B' . ($cityStartRow + 1) . ':B' . $cityEndRow, \PhpOffice\PhpSpreadsheet\Cell\DataValidation::TYPE_LIST, ['formula1' => '=$B$' . $cityStartRow]);
            }
        }

        // Create a response for Excel download
        $filename = 'dependency_dropdown_example.xlsx';
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment; filename="' . $filename . '"');
        header('Cache-Control: max-age=0');

        $writer = \PhpOffice\PhpSpreadsheet\IOFactory::createWriter($spreadsheet, 'Xlsx');
        $writer->save('php://output');
        exit;
    }
}






// application/controllers/DropdownController.php
class DropdownController extends CI_Controller {
    public function index() {
        $this->load->view('dropdown_view');
    }

    public function generate_excel() {
        // Load PhpSpreadsheet library
        require_once APPPATH . 'libraries/vendor/autoload.php';
        $spreadsheet = new \PhpOffice\PhpSpreadsheet\Spreadsheet();
        $sheet = $spreadsheet->getActiveSheet();

        // Define parent and child dropdown options
        $parentOptions = ['Option 1', 'Option 2', 'Option 3'];
        $childOptions = [
            'Option 1' => ['Child Option 1', 'Child Option 2', 'Child Option 3'],
            'Option 2' => ['Child Option 4', 'Child Option 5'],
            'Option 3' => ['Child Option 6', 'Child Option 7', 'Child Option 8'],
        ];

        // Set parent dropdown options
        $sheet->setCellValue('A1', 'Select Parent');
        $sheet->setCellValue('B1', implode(',', $parentOptions));

        // Set data validation for parent dropdown
        $sheet->getDataValidation('B2:B100')->setType(\PhpOffice\PhpSpreadsheet\Cell\DataValidation::TYPE_LIST)
            ->setFormula1('"' . implode(',', $parentOptions) . '"');

        // Set child dropdown options based on selected parent
        foreach ($parentOptions as $index => $parentOption) {
            $startRow = $index * 10 + 2; // Adjust the start row as per your requirements
            $endRow = $startRow + count($childOptions[$parentOption]) - 1;
            $options = implode(',', $childOptions[$parentOption]);
            $sheet->setCellValue('A' . $startRow, 'Select Child');
            $sheet->setCellValue('B' . $startRow, $options);
            // Set data validation for child dropdown
            $sheet->getDataValidation('B' . ($startRow + 1) . ':B' . $endRow)->setType(\PhpOffice\PhpSpreadsheet\Cell\DataValidation::TYPE_LIST)
                ->setFormula1('INDIRECT("B' . $startRow . '")');
        }

        // Create a response for Excel download
        $filename = 'dependency_dropdown_example.xlsx';
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment; filename="' . $filename . '"');
        header('Cache-Control: max-age=0');

        $writer = \PhpOffice\PhpSpreadsheet\IOFactory::createWriter($spreadsheet, 'Xlsx');
        $writer->save('php://output');
        exit;
    }
}


// application/controllers/DropdownController.php
class DropdownController extends CI_Controller {
    public function generate_excel() {
        // Load PhpSpreadsheet library
        require_once APPPATH . 'libraries/vendor/autoload.php';
        $spreadsheet = new \PhpOffice\PhpSpreadsheet\Spreadsheet();
        $sheet = $spreadsheet->getActiveSheet();

        // Get the data for parent and child dropdowns (replace this with your data retrieval logic)
        $parentOptions = ['Option 1', 'Option 2', 'Option 3'];
        $childOptions = [
            'Option 1' => ['Child Option 1', 'Child Option 2'],
            'Option 2' => ['Child Option 3', 'Child Option 4'],
            'Option 3' => ['Child Option 5', 'Child Option 6'],
        ];

        // Set parent dropdown options
        $parentOptionsCell = 'A2';
        $sheet->setCellValue($parentOptionsCell, implode(',', $parentOptions));

        // Set child dropdown options based on parent selection
        foreach ($parentOptions as $index => $option) {
            $childOptionsCell = 'A' . ($index + 2);
            $sheet->setCellValue($childOptionsCell, implode(',', $childOptions[$option]));
        }

        // Create a response for Excel download
        $filename = 'dependency_dropdown_example.xlsx';
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="' . $filename . '"');
        header('Cache-Control: max-age=0');

        $writer = \PhpOffice\PhpSpreadsheet\IOFactory::createWriter($spreadsheet, 'Xlsx');
        $writer->save('php://output');
        exit;
    }
}


// application/controllers/DropdownController.php
class DropdownController extends CI_Controller {
    public function index() {
        $this->load->view('dropdown_view');
    }

    public function generate_excel() {
        $filename = 'dependency_dropdown_example.xlsx';
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment; filename="' . $filename . '"');
        header('Cache-Control: max-age=0');

        $excelData = $this->generateExcelData();
        echo $excelData;
        exit;
    }

    private function generateExcelData() {
        // Define parent and child dropdown options
        $parentOptions = ['Option 1', 'Option 2', 'Option 3'];
        $childOptions = [
            'Option 1' => ['Child Option 1', 'Child Option 2'],
            'Option 2' => ['Child Option 3', 'Child Option 4'],
            'Option 3' => ['Child Option 5', 'Child Option 6'],
        ];

        $xml = '<?xml version="1.0"?>
            <Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet"
                      xmlns:x="urn:schemas-microsoft-com:office:excel"
                      xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"
                      xmlns:html="http://www.w3.org/TR/REC-html40">
                <Worksheet ss:Name="Sheet1">
                    <Table>
                        <Row>
                            <Cell><Data ss:Type="String">Select Parent</Data></Cell>
                            <Cell><Data ss:Type="String">' . implode(',', $parentOptions) . '</Data></Cell>
                        </Row>';

        foreach ($parentOptions as $index => $parentOption) {
            $xml .= '<Row>
                        <Cell><Data ss:Type="String">Select Child</Data></Cell>
                        <Cell><Data ss:Type="String">' . implode(',', $childOptions[$parentOption]) . '</Data></Cell>
                    </Row>';
        }

        $xml .= '</Table>
                </Worksheet>
            </Workbook>';

        return $xml;
    }
}













// application/controllers/DropdownController.php
require_once APPPATH . 'libraries/Classes/PHPExcel.php';

class DropdownController extends CI_Controller {
    public function index() {
        $this->load->view('dropdown_view');
    }

    public function generate_excel() {
        // Create new PHPExcel object
        $objPHPExcel = new PHPExcel();

        // Define parent and child dropdown options
        $parentOptions = ['Option 1', 'Option 2', 'Option 3'];
        $childOptions = [
            'Option 1' => ['Child Option 1', 'Child Option 2'],
            'Option 2' => ['Child Option 3', 'Child Option 4'],
            'Option 3' => ['Child Option 5', 'Child Option 6'],
        ];

        // Set parent dropdown options
        $objPHPExcel->getActiveSheet()->setCellValue('A1', 'Select Parent');
        $objPHPExcel->getActiveSheet()->setCellValue('B1', implode(',', $parentOptions));

        // Set data validation for parent dropdown
        $objValidation = $objPHPExcel->getActiveSheet()->getCell('B2')->getDataValidation();
        $objValidation->setType(PHPExcel_Cell_DataValidation::TYPE_LIST);
        $objValidation->setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_INFORMATION);
        $objValidation->setAllowBlank(false);
        $objValidation->setShowDropDown(true);
        $objValidation->setFormula1('"' . implode(',', $parentOptions) . '"');

        // Set child dropdown options based on selected parent
        foreach ($parentOptions as $index => $parentOption) {
            $startRow = $index * 10 + 2; // Adjust the start row as per your requirements
            $endRow = $startRow + count($childOptions[$parentOption]) - 1;
            $options = implode(',', $childOptions[$parentOption]);
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $startRow, 'Select Child');
            $objPHPExcel->getActiveSheet()->setCellValue('B' . $startRow, $options);

            // Set data validation for child dropdown
            $objValidation = $objPHPExcel->getActiveSheet()->getCell('B' . ($startRow + 1))->getDataValidation();
            $objValidation->setType(PHPExcel_Cell_DataValidation::TYPE_LIST);
            $objValidation->setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_INFORMATION);
            $objValidation->setAllowBlank(false);
            $objValidation->setShowDropDown(true);
            $objValidation->setFormula1('"'.$options.'"');
        }

        // Set active sheet index to the first sheet
        $objPHPExcel->setActiveSheetIndex(0);

        // Create a response for Excel download
        $filename = 'dependency_dropdown_example.xls';
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="' . $filename . '"');
        header('Cache-Control: max-age=0');

        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save('php://output');
        exit;
    }
}




// application/controllers/DropdownController.php
require_once APPPATH . 'libraries/PHPExcel.php'; // Include the PHPExcel library

class DropdownController extends CI_Controller {
    public function index() {
        $this->load->view('dropdown_view');
    }

    public function generate_excel() {
        // Create a new PHPExcel object
        $objPHPExcel = new PHPExcel();

        // Set default properties
        $objPHPExcel->getProperties()
            ->setCreator("Your Name")
            ->setLastModifiedBy("Your Name")
            ->setTitle("Dependency Dropdown Example")
            ->setSubject("Dependency Dropdown Example")
            ->setDescription("Dependency dropdown example for country, state, and city");

        // Add a new worksheet
        $objPHPExcel->setActiveSheetIndex(0);
        $sheet = $objPHPExcel->getActiveSheet();

        // Define country, state, and city data (replace this with your data retrieval logic)
        $countries = ['Country 1', 'Country 2', 'Country 3'];
        $states = [
            'Country 1' => ['State 1', 'State 2'],
            'Country 2' => ['State 3', 'State 4'],
            'Country 3' => ['State 5', 'State 6'],
        ];
        $cities = [
            'State 1' => ['City 1', 'City 2'],
            'State 2' => ['City 3', 'City 4'],
            'State 3' => ['City 5', 'City 6'],
            'State 4' => ['City 7', 'City 8'],
            'State 5' => ['City 9', 'City 10'],
            'State 6' => ['City 11', 'City 12'],
        ];

        // Set country dropdown options
        $sheet->setCellValue('A1', 'Select Country');
        $sheet->setCellValue('B1', implode(',', $countries));

        // Set data validation for country dropdown
        $objValidation = $sheet->getCell('B2')->getDataValidation();
        $objValidation->setType(PHPExcel_Cell_DataValidation::TYPE_LIST);
        $objValidation->setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_INFORMATION);
        $objValidation->setAllowBlank(false);
        $objValidation->setShowDropDown(true);
        $objValidation->setFormula1('"' . implode(',', $countries) . '"');

        // Set state dropdown options based on selected country
        foreach ($countries as $index => $country) {
            $startRow = $index * 10 + 2; // Adjust the start row as per your requirements
            $endRow = $startRow + count($states[$country]) - 1;
            $options = implode(',', $states[$country]);
            $sheet->setCellValue('A' . $startRow, 'Select State');
            $sheet->setCellValue('B' . $startRow, $options);

            // Set data validation for state dropdown
            $objValidation = $sheet->getCell('B' . ($startRow + 1))->getDataValidation();
            $objValidation->setType(PHPExcel_Cell_DataValidation::TYPE_LIST);
            $objValidation->setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_INFORMATION);
            $objValidation->setAllowBlank(false);
            $objValidation->setShowDropDown(true);
            $objValidation->setFormula1('"' . $options . '"');

            // Set city dropdown options based on selected state
            foreach ($states[$country] as $stateIndex => $state) {
                $cityStartRow = $startRow + $stateIndex * 10 + 2; // Adjust the start row as per your requirements
                $cityEndRow = $cityStartRow + count($cities[$state]) - 1;
                $cityOptions = implode(',', $cities[$state]);
                $sheet->setCellValue('A' . $cityStartRow, 'Select City');
                $sheet->setCellValue('B' . $cityStartRow, $cityOptions);

                // Set data validation for city dropdown
                $objValidation = $sheet->getCell('B' . ($cityStartRow + 1))->getDataValidation();
                $objValidation->setType(PHPExcel_Cell_DataValidation::TYPE_LIST);
                $objValidation->setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_INFORMATION);
                $objValidation->setAllowBlank(false);
                $objValidation->setShowDropDown(true);
                $objValidation->setFormula1('"' . $cityOptions . '"');
            }
        }

        // Rename worksheet
        $sheet->setTitle('Dependency Dropdowns');

        // Create a response for Excel download
        $filename = 'dependency_dropdown_example.xls';
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="' . $filename . '"');
        header('Cache-Control: max-age=0');

        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save('php://output');
        exit;
    }
}




// application/controllers/DropdownController.php
require_once APPPATH . 'PHPExcel/PHPExcel.php';

class DropdownController extends CI_Controller {
    public function index() {
        $this->load->view('dropdown_view');
    }

    public function generate_excel() {
        // Create a new PHPExcel object
        $objPHPExcel = new PHPExcel();

        // Set default sheet to active
        $objPHPExcel->setActiveSheetIndex(0);
        $sheet = $objPHPExcel->getActiveSheet();

        // Define country, state, and city data (replace this with your data retrieval logic)
        $countries = ['Country 1', 'Country 2', 'Country 3'];
        $states = [
            'Country 1' => ['State 1', 'State 2'],
            'Country 2' => ['State 3', 'State 4'],
            'Country 3' => ['State 5', 'State 6'],
        ];
        $cities = [
            'State 1' => ['City 1', 'City 2'],
            'State 2' => ['City 3', 'City 4'],
            'State 3' => ['City 5', 'City 6'],
            'State 4' => ['City 7', 'City 8'],
            'State 5' => ['City 9', 'City 10'],
            'State 6' => ['City 11', 'City 12'],
        ];

        // Set country dropdown options
        $sheet->setCellValue('A1', 'Select Country');
        $sheet->setCellValue('B1', implode(',', $countries));

        // Set data validation for country dropdown
        $objValidation = $sheet->getCell('B2')->getDataValidation();
        $objValidation->setType(PHPExcel_Cell_DataValidation::TYPE_LIST);
        $objValidation->setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_INFORMATION);
        $objValidation->setAllowBlank(false);
        $objValidation->setShowInputMessage(true);
        $objValidation->setShowErrorMessage(true);
        $objValidation->setShowDropDown(true);
        $objValidation->setErrorTitle('Input error');
        $objValidation->setError('Value is not in list.');
        $objValidation->setPromptTitle('Pick from list');
        $objValidation->setPrompt('Please pick a value from the drop-down list.');
        $objValidation->setFormula1('"' . implode(',', $countries) . '"');

        // Set state dropdown options
        $currentRow = 2;
        foreach ($countries as $country) {
            $sheet->setCellValue('A' . $currentRow, 'Select State');
            $sheet->setCellValue('B' . $currentRow, implode(',', $states[$country]));

            // Set data validation for state dropdown
            $objValidation = $sheet->getCell('B' . ($currentRow + 1))->getDataValidation();
            $objValidation->setType(PHPExcel_Cell_DataValidation::TYPE_LIST);
            $objValidation->setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_INFORMATION);
            $objValidation->setAllowBlank(false);
            $objValidation->setShowInputMessage(true);
            $objValidation->setShowErrorMessage(true);
            $objValidation->setShowDropDown(true);
            $objValidation->setErrorTitle('Input error');
            $objValidation->setError('Value is not in list.');
            $objValidation->setPromptTitle('Pick from list');
            $objValidation->setPrompt('Please pick a value from the drop-down list.');
            $objValidation->setFormula1('"' . implode(',', $states[$country]) . '"');

            $currentRow += 2;
        }

        // Create a response for Excel download
        $filename = 'dependency_dropdown_example.xls';
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment; filename="' . $filename . '"');
        header('Cache-Control: max-age=0');

        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save('php://output');
        exit;
    }
}


